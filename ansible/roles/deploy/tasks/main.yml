# SPDX-License-Identifier: MIT-0
---
# tasks file for deploy

- name: Clone Django project
  git:
    repo: https://github.com/digitalocean/sample-django.git
    dest: /home/ubuntu/sample-django
    version: main
    force: yes

- name: Create virtual environment
  command: python3 -m venv /home/ubuntu/sample-django/venv
  args:
    creates: /home/ubuntu/sample-django/venv

- name: Install requirements
  command: /home/ubuntu/sample-django/venv/bin/pip install -r requirements.txt
  args:
    chdir: /home/ubuntu/sample-django
  register: pip_install
  failed_when: pip_install.rc != 0
  ignore_errors: yes

- name: Set proper permissions
  file:
    path: /home/ubuntu/sample-django
    owner: ubuntu
    group: ubuntu
    recurse: yes
  become: true


- name: Update settings.py with DB config
  replace:
    path: /home/ubuntu/sample-django/mysite/settings.py
    regexp: "'ENGINE': '.*'"
    replace: "'ENGINE': 'django.db.backends.postgresql'"

- name: Set allowed hosts
  lineinfile:
    path: /home/ubuntu/sample-django/mysite/settings.py
    regexp: "^ALLOWED_HOSTS = .*"
    line: "ALLOWED_HOSTS = ['*']"

- name: Wait for PostgreSQL to be ready
  wait_for:
    host: "{{ db_private_ip }}"
    port: 5432
    delay: 5
    timeout: 60

- name: Run migrations with DATABASE_URL set
  command: >
    bash -c 'export DATABASE_URL=postgres://django:django123@{{ db_private_ip }}/sample &&
             /home/ubuntu/sample-django/venv/bin/python manage.py migrate'
  args:
    chdir: /home/ubuntu/sample-django

- name: Create Gunicorn systemd service file
  copy:
    dest: /etc/systemd/system/gunicorn.service
    content: |
      [Unit]
      Description=gunicorn daemon
      After=network.target

      [Service]
      User=ubuntu
      Group=ubuntu
      WorkingDirectory=/home/ubuntu/sample-django
      ExecStart=/home/ubuntu/sample-django/venv/bin/gunicorn mysite.wsgi:application \
        --bind 127.0.0.1:8000 \
        --workers 3 \
        --timeout 120 \
        --log-level debug

      Environment="PATH=/home/ubuntu/sample-django/venv/bin"
      Restart=always
      RestartSec=3

      [Install]
      WantedBy=multi-user.target
  become: true

- name: Reload systemd
  command: systemctl daemon-reexec
  become: true

- name: Enable and start Gunicorn
  service:
    name: gunicorn
    state: restarted
    enabled: true
  become: true

- name: Remove default nginx config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: true

- name: Create nginx config for Django app
  copy:
    dest: /etc/nginx/sites-available/sample_django
    content: |
      server {
          listen 80;
          server_name _;

          location / {
              proxy_pass http://127.0.0.1:8000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_connect_timeout 300s;
              proxy_read_timeout 300s;
          }

          location /static/ {
              alias /home/ubuntu/sample-django/static/;
          }
      }
  become: true

- name: Enable Django nginx config
  file:
    src: /etc/nginx/sites-available/sample_django
    dest: /etc/nginx/sites-enabled/sample_django
    state: link
    force: true
  become: true

- name: Restart nginx
  service:
    name: nginx
    state: restarted
  become: true
